package VoiceMenuTest.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptorInitContext;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.scope.ListScope;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public class Assert_Constraints extends BaseConstraintsDescriptor {
  /*package*/ Assert_Constraints(ConstraintsDescriptorInitContext initContext) {
    super(CONCEPTS.Assert$Fi, initContext);
    record(new RD1(this));
  }

  /*package*/ static final class RD1 extends BaseReferenceConstraintsDescriptor {
    /*package*/ RD1(ConstraintsDescriptor container) {
      super(LINKS.expectedEvent$5c5c, container, true, false);
    }
    @Nullable
    @Override
    public ReferenceScopeProvider getScopeProvider() {
      return new BaseScopeProvider() {
        @Override
        public SNodeReference getSearchScopeValidatorNode() {
          return new SNodePointer("r:f13c684f-5a73-4f94-a84e-78c195b9a56b(VoiceMenuTest.constraints)", "8281000289632442912");
        }
        @Override
        public Scope createScope(final ReferenceConstraintsContext _context) {
          List<SNode> events = SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getContainingRoot(_context.getContextNode()), CONCEPTS.VoiceMenuTestCase$U_), LINKS.workspaceToTest$OyBX), CONCEPTS.Event$Du, false, new SAbstractConcept[]{});
          return ListScope.forNamedElements(events);
        }
      };
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Assert$Fi = MetaAdapterFactory.getConcept(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887030a6L, "VoiceMenuTest.structure.Assert");
    /*package*/ static final SConcept VoiceMenuTestCase$U_ = MetaAdapterFactory.getConcept(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc0cL, "VoiceMenuTest.structure.VoiceMenuTestCase");
    /*package*/ static final SConcept Event$Du = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde30cL, "jetbrains.mps.samples.VoiceMenu.structure.Event");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink expectedEvent$5c5c = MetaAdapterFactory.getReferenceLink(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887030a6L, 0x72ec05e38870a891L, "expectedEvent");
    /*package*/ static final SReferenceLink workspaceToTest$OyBX = MetaAdapterFactory.getReferenceLink(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc0cL, 0x72ec05e388705231L, "workspaceToTest");
  }
}
